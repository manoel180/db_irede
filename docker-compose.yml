services:
  db:
    image: mysql:lts
    restart: always
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3306:3306'
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - mysql-volume:/var/lib/mysql
    networks:
      - db_irede_network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 160

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.4
    command: start --import-realm
    volumes:
      - ./keycloak/imports:/opt/keycloak/data/import
    environment:
      KC_HOSTNAME: http://localhost:8081/
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://db/${KEYCLOAK_DB}
      KC_DB_USERNAME: ${MYSQL_USER}
      KC_DB_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8081:8080"
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
        ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db_irede_network

  app:
    build:
      context: .
    container_name: app
    restart: always
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
        DATABASE_HOST: db
        DATABASE_PORT: 3306
        DATABASE_NAME: ${DATABASE_NAME}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        JWT_ISSUER_URI: ${JWT_ISSUER_URI}
        JWT_JWK_SET_URI: ${JWT_ISSUER_URI}/protocol/openid-connect/certs
        KC_SECRET: ${KC_SECRET}
    ports:
      - 9090:9090
    networks:
      - db_irede_network

volumes:
  mysql-volume:
    driver: local

networks:
  db_irede_network:
    driver: bridge